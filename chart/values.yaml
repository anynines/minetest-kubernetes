## Minetest server image version
## ref: https://hub.docker.com/r/linuxserver/minetest
##
image:
  minetest:
    ## Minetest server image version
    ## ref: https://hub.docker.com/r/linuxserver/minetest/tags
    ##
    registry: docker.io
    repository: linuxserver/minetest
    tag: latest
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: Always
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - myRegistryKeySecretName
  httpd:
    ## httpd image version
    ## ref:
    ##
    registry: docker.io
    repository: httpd
    tag: latest
    ## Specify a imagePullPolicy
    ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
    ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
    ##
    pullPolicy: IfNotPresent
    ## Optionally specify an array of imagePullSecrets.
    ## Secrets must be manually created in the namespace.
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
    ##
    # pullSecrets:
    #   - myRegistryKeySecretName

## String to partially override fullname templates (will maintain the release name)
##
nameOverride: {}
#   chart:

## String to fully override fullname templates
##
fullnameOverride: {}
#   chart:

## Port to expose to the internet
minetestPort: 30000

## Minetest timezone
minetestTimezone: Europe/London

## Cli Arguments
# cliArgs: "--gameid minetest"
cliArgs: ""

## Do a backup before minetest start
backup: true

## Lauch specific game
## Go to https://content.minetest.net/packages/?type=game, choose a game and
## configure its url WITHOUT / in the end or set this var to false to
## autogenerate a world with default minetest game.
##

setGame: true
gameUrl: https://content.minetest.net/packages/Wuzzy/mineclone2
#gameUrl: https://content.minetest.net/packages/Wuzzy/tutorial
# minetest.conf except default_game
#gameConfig: []

## Use an alternate scheduler, e.g. "stork".
## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
##
# schedulerName:

## Kubernetes configuration
## For minikube, set this to NodePort, elsewhere use LoadBalancer or ClusterIP
##
service:
  type: ClusterIP
  ## Public UDP Port
  ##
  port: 30000
  ## Enable client source IP preservation
  ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
  ##
  externalTrafficPolicy: Cluster

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    memory: 512Mi
    cpu: 300m

## Node labels for pod assignment
## Ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Tolerations for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Pod annotations
## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
##
podAnnotations: {}

## Configure the ingress resource that allows you to access the
## WordPress installation. Set up the URL
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## Set to true to enable ingress record generation
  enabled: true

  ## When the ingress is enabled, a host pointing to this will be created
  hostname: minetest.ferrergarcia.es

  ## Ingress annotations done as key:value pairs
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ##
  annotations: {}
  # kubernetes.io/ingress.class: nginx

persistence:
  size: 1Gi
  accessMode: ReadWriteOnce
  #annotations:
  #  "helm.sh/resource-policy": keep
